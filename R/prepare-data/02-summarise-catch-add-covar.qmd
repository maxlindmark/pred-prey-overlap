---
title: "Summarise density data and add environmental covariates"
author: "Max Lindmark"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    embed-resources: true
    fig-width: 8
knitr: 
  opts_chunk:
    fig.align: center
editor: source
execute: 
  echo: true
  eval: true
  cache: false
---

## Load libraries

```{r}
#| message: false

library(tidyverse)
library(tidync)
library(tidyterra)
library(ncdf4)
library(viridis)
library(sdmTMB)

# Set path
home <- here::here()
```

## Read data

```{r}
#| message: false
d <- read.csv(paste0(home, "/data/clean/cod_cpue_length.csv")) |>
  filter(lon < 23)

# Summarize total density by haul and size-class
d_com <- d |>
  summarise(density = sum(biomass_density), .by = haul_id)
  
# Now left join in all other information... and replace NA with 0
d_haul <- d |>
  distinct(haul_id, .keep_all = TRUE) |>
  dplyr::select(
    -biomass_density, -CPUEun, -source,
    -species, -length_class, -density
  )

d_haul <- left_join(d_haul, d_com,
  by = "haul_id"
) |>
  mutate(density = replace_na(density, 0))

# Check distributions of densities across hauls
d_haul |>
  ggplot(aes(density)) +
  geom_histogram()

# Filter quarters
d_haul <- d_haul |> filter(quarter %in% c(1, 4))

# Trim some extreme quantiles
#d_haul <- d_haul |> filter(density < quantile(density, probs = 0.995))
```

## Add environmental covariates

```{r}
#| message: false

## Add in the environmental variables
dat <- d_haul |>
  mutate(month_year = paste(month, year, sep = "_"))

covPath <- paste0(home, "/data/covariates")
```

#### Oxygen

```{r oxygen}
#| message: false

# Source:
# https://data.marine.copernicus.eu/product/BALTICSEA_ANALYSISFORECAST_BGC_003_007/download?dataset=cmems_mod_bal_bgc_anfc_P1M-m_202311
# https://data.marine.copernicus.eu/product/BALTICSEA_MULTIYEAR_BGC_003_012/download?dataset=cmems_mod_bal_bgc_my_P1M-m_202303
# Print details
print(nc_open(paste(covPath, "oxygen", "cmems_mod_bal_bgc_my_P1M-m_1718018848983.nc", sep = "/")))

oxy_tibble <- tidync(paste(covPath, "oxygen",
  "cmems_mod_bal_bgc_my_P1M-m_1718018848983.nc",
  sep = "/"
)) |>
  hyper_tibble() |>
  mutate(date = as_datetime(time, origin = "1970-01-01")) |>
  mutate(
    month = month(date),
    day = day(date),
    year = year(date),
    month_year = paste(month, year, sep = "_"),
    oxy = o2b * 0.0223909
  )

# Now do recent data (forecast)
print(nc_open(paste(covPath, "oxygen", "cmems_mod_bal_bgc_anfc_P1M-m_1718022118172.nc", sep = "/")))

oxy_tibble_new <- tidync(paste(covPath, "oxygen",
  "cmems_mod_bal_bgc_anfc_P1M-m_1718022118172.nc",
  sep = "/"
)) |>
  hyper_tibble() |>
  mutate(date = as_datetime(time, origin = "1970-01-01")) |>
  mutate(
    month = month(date),
    day = day(date),
    year = year(date),
    month_year = paste(month, year, sep = "_"),
    oxy = o2b * 0.0223909
  ) |>
  filter(year > 2021)

oxy_tibble <- bind_rows(oxy_tibble, oxy_tibble_new)

# Loop through all year combos, extract the temperatures at the data locations
oxy_list <- list()

#unique(oxy_tibble$day)
# oxy_tibble |> 
#   summarise(n = n(), .by = c(longitude, latitude, month_year)) |> 
#   distinct(n)
  
for (i in unique(dat$month_year)) {
  d_sub <- filter(dat, month_year == i)
  oxy_tibble_sub <- filter(oxy_tibble, month_year == i)

  # Convert to raster
  ggplot(oxy_tibble_sub, aes(longitude, latitude)) +
    geom_point(size = 0.1)

  oxy_raster <- as_spatraster(oxy_tibble_sub,
    xycols = 2:3,
    crs = "WGS84", digits = 3
  )

  ggplot() +
    geom_spatraster(data = oxy_raster$oxy, aes(fill = oxy)) +
    scale_fill_viridis(option = "magma") +
    ggtitle(i)

  # Extract from raster
  d_sub$oxy <- terra::extract(
    oxy_raster$oxy,
    d_sub |> dplyr::select(lon, lat)
  )$oxy

  # Save
  oxy_list[[i]] <- d_sub
}

d_oxy <- bind_rows(oxy_list)
```

#### Temperature & Salinity

```{r temperature}
#| message: false

# Source
# https://data.marine.copernicus.eu/product/BALTICSEA_MULTIYEAR_PHY_003_011/description
# https://data.marine.copernicus.eu/product/BALTICSEA_ANALYSISFORECAST_PHY_003_006/description
# Print details
print(nc_open(paste(covPath, "temperature_salinity", "cmems_mod_bal_phy_my_P1M-m_1718087629163.nc", sep = "/")))

st_tibble <- tidync(paste(covPath, "temperature_salinity",
  "cmems_mod_bal_phy_my_P1M-m_1718087629163.nc",
  sep = "/"
)) |>
  hyper_tibble() |>
  mutate(date = as_datetime(time, origin = "1970-01-01")) |>
  mutate(
    month = month(date),
    day = day(date),
    year = year(date),
    month_year = paste(month, year, sep = "_")
  )

# Now do recent data (forecast)
print(nc_open(paste(covPath, "temperature_salinity", "cmems_mod_bal_phy_anfc_P1M-m_1718087127439.nc", sep = "/")))

st_tibble_new <- tidync(paste(covPath, "temperature_salinity",
  "cmems_mod_bal_phy_anfc_P1M-m_1718087127439.nc",
  sep = "/"
)) |>
  hyper_tibble() |>
  mutate(date = as_datetime(time, origin = "1970-01-01")) |>
  mutate(
    month = month(date),
    day = day(date),
    year = year(date),
    month_year = paste(month, year, sep = "_")
  ) |>
  filter(year > 2021)

st_tibble <- bind_rows(st_tibble, st_tibble_new)

# Loop through all year combos, extract the temperatures at the data locations
st_list <- list()

for (i in unique(dat$month_year)) {
  d_sub <- filter(dat, month_year == i)
  st_tibble_sub <- filter(st_tibble, month_year == i)

  # Convert to raster
  ggplot(st_tibble_sub, aes(longitude, latitude)) +
    geom_point(size = 0.1)

  st_raster <- as_spatraster(st_tibble_sub,
    xycols = 3:4,
    crs = "WGS84", digits = 3
  )

  ggplot() +
    geom_spatraster(data = st_raster$bottomT, aes(fill = bottomT)) +
    scale_fill_viridis(option = "magma") +
    ggtitle(i)

  ggplot() +
    geom_spatraster(data = st_raster$sob, aes(fill = sob)) +
    scale_fill_viridis(option = "magma") +
    ggtitle(i)

  # Extract from raster
  d_sub$temp <- terra::extract(
    st_raster$bottomT,
    d_sub |> dplyr::select(lon, lat)
  )$bottomT

  d_sub$salinity <- terra::extract(
    st_raster$sob,
    d_sub |> dplyr::select(lon, lat)
  )$sob

  # Save
  st_list[[i]] <- d_sub
}

d_st <- bind_rows(st_list)
```

```{r join environmental data}
#| message: false

# I have some combos of month_year, lon and lat that occur more than once in different haul_ids ...
d_st2 <- d_st |>
  mutate(id = paste(month_year, lon, lat, sep = ":")) |>
  distinct(id, .keep_all = TRUE) |>
  dplyr::select(-id)

d_oxy2 <- d_oxy |>
  mutate(id = paste(month_year, lon, lat, sep = ":")) |>
  distinct(id, .keep_all = TRUE) |>
  dplyr::select(-id)

env_dat <- d_st2 |>
  left_join(d_oxy2 |> dplyr::select(month_year, lon, lat, oxy), by = c("month_year", "lon", "lat")) |>
  dplyr::select(month_year, lon, lat, temp, salinity, oxy)
```

#### Depth

```{r depth}
#| message: false
# Only use unique locations and then left_join else it will take forever
# https://gis.stackexchange.com/questions/411261/read-multiple-layers-raster-from-ncdf-file-using-terra-package
# https://emodnet.ec.europa.eu/geoviewer/
dep_raster <- terra::rast(paste0(home, "/data/covariates/depth/Mean depth natural colour (with land).nc"))

# class(dep_raster)
# plot(dep_raster)

env_dat$depth <- terra::extract(dep_raster, env_dat |> dplyr::select(lon, lat))$elevation

ggplot(env_dat, aes(lon, lat, color = depth * -1)) +
  geom_point() +
  scale_color_viridis(direction = -1) +
  coord_sf()

env_dat$depth <- env_dat$depth * -1
```

## Save clean file

```{r}
d_haul <- d_haul |>
  mutate(month_year = paste(month, year, sep = "_")) |>
  left_join(env_dat, by = c("month_year", "lon", "lat")) |>
  tidylog::drop_na(oxy, temp, depth)

## Add UTM
d_haul <- add_utm_columns(d_haul, c("lon", "lat"))

# Save!
write_csv(d_haul, paste0(home, "/data/clean/catch_clean.csv"))
```
