---
title: "Fit density models to cod of different sizes"
author: "Max Lindmark"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
editor: source
execute: 
  echo: true
  eval: true
  cache: false
---

## Load packages & source functions

```{r load libraries}
#| cache: false
#| message: false
#| warning: false
#| code-fold: true

library(tidyverse)
library(RCurl)
library(viridis)
library(devtools)
library(sdmTMBextra)
library(tictoc)
library(tidylog)
library(sdmTMB)
library(ggtext)

# Source code for map plots
# You need: # devtools::install_github("seananderson/ggsidekick") # not on CRAN; library(ggsidekick)
devtools::source_url("https://raw.githubusercontent.com/maxlindmark/pred-prey-overlap/main/R/functions/map-plot.R")

# Set path
home <- here::here()
```

## Read and scale data

```{r read biomass data}
#| cache: false
#| message: false

# Read & scale data
d <- read_csv(paste0(home, "/data/clean/catch_clean.csv")) |>
  drop_na(depth, oxy, salinity, temp) |>
  mutate(
    year_f = as.factor(year),
    quarter_f = as.factor(quarter),
    month_f = as.factor(month)
  ) |>
  mutate(across(
    .cols = c("temp", "salinity", "oxy", "depth"),
    .fns = scale,
    .names = "{.col}_sc"
  )) |>
  mutate(
    temp_sq = temp_sc^2,
    oxy_sq = oxy_sc^2,
    depth_sq = depth_sc^2,
  )
```

## Create mesh

```{r}
#| cache: false

mesh <- make_mesh(d,
  xy_cols = c("X", "Y"),
  cutoff = 10
)

ggplot() +
  inlabru::gg(mesh$mesh) +
  coord_fixed() +
  geom_point(aes(X, Y), data = d, alpha = 0.2, size = 0.5) +
  #annotate("text", -Inf, Inf, label = paste("n knots = ", mesh$mesh$n), hjust = -0.3, vjust = 3) +
  labs(x = "Easting (km)", y = "Northing (km)")

ggsave(paste0(home, "/figures/supp/density_mesh.pdf"), width = 14, height = 14, units = "cm")
```

## Poisson link model

```{r model}
ggplot(d, aes(depth_sc, density)) +
  geom_point() +
  geom_smooth()

tic()
mcod <- sdmTMB(density ~ 0 + year_f + depth_sc + depth_sq + quarter_f + salinity_sc + temp_sc + temp_sq + breakpt(oxy_sc),
  data = d,
  mesh = mesh,
  family = delta_gamma(type = "poisson-link"),
  time_varying = ~ 0 + depth_sc + depth_sq,
  time_varying_type = "rw0",
  spatiotemporal = "iid",
  spatial = "off",
  spatial_varying = ~ 0 + quarter_f,
  time = "year"
)
toc()

mcod # Range looks good
sanity(mcod)
```

Conditional effect of depth

```{r}
nd <- expand.grid(
  depth = seq(min(d$depth),
              max(d$depth),
              length.out = 50
              ),
  year = unique(d$year) # all years
) |> 
  mutate(year_f = as.factor(year),
         depth_sc = (depth - mean(d$depth)) / sd(d$depth),
         depth_sq = depth_sc^2,
         quarter_f = as.factor(4),
         salinity_sc = 0,
         temp_sc = 0,
         temp_sq = 0,
         oxy_sc = 0)

# Too slow for SE fit... use sims instead
cod_sims <- predict(mcod,
                    newdata = nd,
                    re_form = NA,
                    nsim = 500) |>
  as.data.frame() |> 
  bind_cols(nd) |> 
  pivot_longer(cols = starts_with("V"), names_to = "sim") |> 
  mutate(sim = as.factor(sim))

sims_sum <- cod_sims |> 
  summarise(median = median(value),
            upr = quantile(value, 0.9),
            lwr = quantile(value, 0.1),
            .by = c(depth, year))

sims_sum |> 
  ggplot(aes(depth, exp(median), ymin = exp(lwr), ymax = exp(upr), 
             color = year, fill = year, group = year)) +
  geom_ribbon(alpha = 0.15, color = NA) +
  
  scale_color_viridis(option = "E", name = "Year") +
  scale_fill_viridis(option = "E") +
  geom_line() + 
  guides(fill = "none", color = guide_colorbar(position = "inside")) +
  labs(
    y = "Cod biomass density (kg/km<sup>2</sup>)",
    x = "Depth (m)"
  ) +
  coord_cartesian(expand = 0) +
  theme(axis.title.y = element_markdown(),
        legend.position.inside = c(0.9, 0.83)) +
  NULL

ggsave(paste0(home, "/figures/supp/tw_depth.pdf"), width = 11, height = 11, units = "cm")
```

Residuals

```{r residuals}
res <- simulate(mcod, nsim = 400, type = "mle-mvn") |>
  dharma_residuals(mcod)

ggplot(res, aes(observed, expected)) +
  geom_point(color = "grey30", shape = 21) +
  geom_abline(col = "tomato3", linewidth = 1.2) +
  theme(aspect.ratio = 1) +
  labs(x = "Observed", y = "Expected")

ggsave(paste0(home, "/figures/supp/qq_cod_sdm.pdf"), width = 11, height = 11, units = "cm")
```

```{r}
# Save model object:
saveRDS(mcod, paste0(home, "/output/mcod.rds"))
```
